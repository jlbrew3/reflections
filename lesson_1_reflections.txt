How did viewing a diff between two versions of a file help you see the bug that was introduced?

Flagged the rows that changed
Made it more targeted to review
Lined things up so that errors jumped out


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Would make you less afraid of making errors
Easy reversion to a working version
Can quickly go back and grab something from an old version and add it to new one


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Better control over commit size and logical nature of it


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Some situations don't call for repository-based saving
Sometimes all you care about is the single file


How can you use the commands git log and git diff to view the history of files?

git clone URL - clones repository
git log - shows all of the commits
git diff oldID newID - shows the differences between two commits
git checkout ID - reverts to old iD

You can always revert without fear of permanent repercussions


Now that you have your workspace set up, what do you want to try using Git for?

Version control
